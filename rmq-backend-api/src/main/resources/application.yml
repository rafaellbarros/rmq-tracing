spring:
  application:
    name: rmq-backend-api
  rabbitmq:
    host: ${RABBITMQ_HOST:localhost}
    port: ${RABBITMQ_PORT:5672}
    username: ${RABBITMQ_USER:admin}
    password: ${RABBITMQ_PASS:admin123}
    virtual-host: /
    connection-timeout: 5000
    template:
      exchange: exchange.request
      routing-key: request.rout.key
      error-queue: response.error
      success-queue: response.success
    listener:
      direct:
        prefetch: 10 # Controla quantas mensagens são consumidas simultaneamente

  # develop
  output:
    ansi:
      enabled: ALWAYS
  devtools:
    restart:
      enabled: true

  zipkin:
    base-url: ${ZIPKIN_URL:http://localhost:9411}
    sender:
      type: web
    compression:
      enabled: true

  sleuth:
    propagation:
      type: B3,W3C # Suporte a ambos os formatos
    sampler:
      probability: ${TRACING_SAMPLE_RATE:1.0} # 100% em dev, ajustar para produção

management:
  endpoints:
    web:
      exposure:
        include: health, info, prometheus, metrics
  metrics:
    export:
      prometheus:
        enabled: true
    tags:
      application: ${spring.application.name}
  tracing:
    sampling:
      probability: ${TRACING_SAMPLE_RATE:1.0}
    tags:
      application: ${spring.application.name} # Padronizado com app name

logging:
  pattern:
    level: "%5p [${spring.application.name},%X{traceId:-},%X{spanId:-}] %m%n"
  level:
    org.springframework.amqp: WARN
    org.springframework.web: INFO

server:
  port: ${SERVER_PORT:8081}

springdoc:
  swagger-ui:
    path: /swagger-ui.html
    tags-sorter: alpha
    operations-sorter: alpha
    disable-swagger-default-url: true
  api-docs:
    path: /v3/api-docs