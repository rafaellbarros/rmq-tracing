spring:
  application:
    name: rmq-backend-api
  rabbitmq:
    host: localhost
    port: 5672
    username: admin
    password: admin123
    virtual-host: /
    connection-timeout: 5000
    template:
      exchange-request: exchange.request
      request-routing-key: request.rout.key
      response-error-queue: response.error
      response-success-queue: response.success

  zipkin:
    base-url: http://localhost:9411
    sender.type: web

  output:
    ansi:
      enabled: ALWAYS

  devtools:
    restart:
      enabled: true

management:
  endpoints:
    web:
      exposure:
        include: health, info, prometheus, metrics
  metrics:
    tags:
      application: ${spring.application.name}
  tracing:
    sampling:
      probability: 1.0  # Coleta 100% dos traces em dev
    tags:
      application: payment-api  # Nome diferente para cada servi√ßo
    zipkin:
      endpoint: http://localhost:9411/api/v2/spans
    logging:
      pattern:
        level: "%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]"

rmq:
  tracing:
    service-name: rmq-producer-api

springdoc:
  swagger-ui:
    path: /swagger-ui.html
    tagsSorter: alpha
    operationsSorter: alpha
    disable-swagger-default-url: true
  api-docs:
    path: /api-docs
  version: 1.0.0

server:
  port: 8081


logging:
  pattern:
    level: "%5p [${spring.application.name},%X{traceId:-},%X{spanId:-}] %m%n"


  #file:
  #  name: ${LOG_FILE:-logs/application.log}
  #  max-history: 7
  #  max-size: 50MB
  #  path: ./logs

  #pattern:
  #  console: "%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(%5p) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n%wEx"
  #  console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"