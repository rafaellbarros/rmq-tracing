spring:
  application:
    name: rmq-backend-worker
  rabbitmq:
    host: ${RABBITMQ_HOST:localhost}
    port: ${RABBITMQ_PORT:5672}
    username: ${RABBITMQ_USER:admin}
    password: ${RABBITMQ_PASS:admin123}
    virtual-host: /
    connection-timeout: 5000
    template:
      exchange: exchange.response
      error-routing-key: error.rout.key
      success-routing-key: success.rout.key
      request-queue: request
    listener:
      simple:
        prefetch: 10
        concurrency: 5 # NÃºmero de consumidores paralelos

  # develop
  output:
    ansi:
      enabled: ALWAYS
  devtools:
    restart:
      enabled: true

  zipkin:
    base-url: ${ZIPKIN_URL:http://localhost:9411}
    sender:
      type: web

management:
  endpoints:
    web:
      exposure:
        include: health, info, prometheus
  metrics:
    tags:
      application: ${spring.application.name}
  tracing:
    sampling:
      probability: ${TRACING_SAMPLE_RATE:1.0}

logging:
  pattern:
    level: "%5p [${spring.application.name},%X{traceId:-},%X{spanId:-}] %m%n"
  level:
    org.springframework.amqp: WARN
    org.springframework.web: INFO

server:
  port: ${SERVER_PORT:8082}